meta {
  name: Get All Achievements
  type: http
  seq: 1
}

get {
  url: {{baseUrl}}/api/achievements
  body: none
  auth: bearer
}

headers {
  Authorization: Bearer {{authToken}}
}

tests {
  test("Status code is 200", function() {
    expect(res.status).to.equal(200);
  });
  
  test("Response contains an array of achievements", function() {
    expect(res.body).to.have.property("success").that.equals(true);
    expect(res.body).to.have.property("data").that.is.an("array");
    
    // If we have achievements, verify their structure
    if (res.body.data.length > 0) {
      const achievement = res.body.data[0];
      expect(achievement).to.have.property("id");
      expect(achievement).to.have.property("name");
      expect(achievement).to.have.property("description");
      expect(achievement).to.have.property("category");
      expect(achievement).to.have.property("criteria");
      expect(achievement).to.have.property("points").that.is.a("number");
      expect(achievement).to.have.property("icon");
      expect(achievement).to.have.property("difficulty");
    }
  });
}

docs {
  Returns all available achievements in the system.
  
  This endpoint requires authentication.
}