meta {
  name: Get Global Leaderboard
  type: http
  seq: 1
}

get {
  url: {{baseUrl}}/api/leaderboard
  body: none
  auth: bearer
}

headers {
  Authorization: Bearer {{authToken}}
}

tests {
  test("Status code is 200", function() {
    expect(res.status).to.equal(200);
  });
  
  test("Response contains leaderboard data", function() {
    expect(res.body).to.have.property("success").that.equals(true);
    expect(res.body).to.have.property("data").that.is.an("array");
    
    // If we have leaderboard entries, verify their structure
    if (res.body.data.length > 0) {
      const entry = res.body.data[0];
      expect(entry).to.have.property("id");
      expect(entry).to.have.property("username");
      expect(entry).to.have.property("avatarUrl");
      expect(entry).to.have.property("portfolioValue").that.is.a("number");
      expect(entry).to.have.property("rank").that.is.a("number");
      expect(entry).to.have.property("change").that.is.a("number");
      expect(entry).to.have.property("performancePercent").that.is.a("number");
    }
  });
  
  test("Leaderboard entries are sorted by rank", function() {
    if (res.body.data.length > 1) {
      for (let i = 1; i < res.body.data.length; i++) {
        expect(res.body.data[i].rank).to.be.greaterThan(res.body.data[i-1].rank);
      }
    }
  });
}

docs {
  Returns the global leaderboard with all users ranked by portfolio value.
  
  This endpoint requires authentication.
  
  The response includes user information, portfolio value, rank, and performance metrics.
}